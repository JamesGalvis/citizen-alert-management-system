// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

enum AlertSeverity {
  Baja
  Media
  Alta
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  password      String?
  image         String?
  role          UserRole  @default(USER)

  entityId String?
  entity   Entity? @relation(fields: [entityId], references: [id])

  alerts   Alert[]
  accounts Account[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Entity {
  id   String @id @default(cuid())
  name String @unique

  users  User[]
  alerts Alert[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Alert {
  id                 String        @id @default(cuid())
  title              String
  description        String
  severity           AlertSeverity
  affectedArea       Float[]
  affectedAreaRadius Float

  entityId String
  entity   Entity @relation(fields: [entityId], references: [id])

  userId String
  user   User   @relation(fields: [userId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
